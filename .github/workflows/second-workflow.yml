# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI Full Tests

on:
  workflow_dispatch: # Запускать pipeline ручками
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install deps
        run: npm ci

      - name: Build package
        run: npm run build --if-present

      - name: Run tests
        run: npm run test

      - name: Run tests
        run: npm run test:coverage
        continue-on-error: true

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: report
          if-no-files-found: error
          path: ./jest-html-report

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          if-no-files-found: error
          path: ./coverage

      - name: Upload test-report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          if-no-files-found: error
          path: ./test-report.html

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: jest-html-report
          clean: true
          token: ${{ secrets.TOKEN }}

  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v1
  #       with:
  #         path: '.'
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1